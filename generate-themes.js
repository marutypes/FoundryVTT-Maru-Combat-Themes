const fs = require("fs");
const path = require("path");

const directoryPath = "/sounds";
const outputFilePath = "/scripts/themes.generated.mjs";
const IGNORE_LIST = ["LICENSE.md"];

fs.readdir(path.join(".", directoryPath), (err, directories) => {
  if (err) {
    console.error(`Error reading directory ${directoryPath}: ${err}`);
    return;
  }

  const themes = {};
  directories.forEach((dir) => {
    const dirPath = path.join(".", directoryPath, dir);
    console.log(dirPath);
    if (IGNORE_LIST.includes(dir)) {
      return;
    }

    const files = fs.readdirSync(dirPath);

    function pathForFoundry(file) {
        return `/modules/maru-combat-themes/sounds/${dir}/${file}`;
    }

    themes[dir] = {
      label: `MCT.Themes.Names.${dir}`,
      startEncounter: files
        .filter((file) => file.startsWith("startEncounter"))
        .map(pathForFoundry),
      startRound: files
        .filter((file) => file.startsWith("startRound"))
        .map(pathForFoundry),
      nextUp: files
        .filter((file) => file.startsWith("nextUp"))
        .map(pathForFoundry),
      yourTurn: files
        .filter((file) => file.startsWith("yourTurn"))
        .map(pathForFoundry),
      endCombat: files
        .filter((file) => file.startsWith("endCombat"))
        .map(pathForFoundry),
    };
  });

  const output = `// GENERATED BY \`generate-themes\`.js on ${new Date()}
  const themes = ${JSON.stringify(themes, null, 2)};
  export default themes;
  `;

  fs.writeFile(path.join(".", outputFilePath), output, (err) => {
    if (err) {
      console.error(`Error writing to file ${outputFilePath}: ${err}`);
      return;
    }

    console.log(`Successfully wrote themes to file ${outputFilePath}`);
  });
});
